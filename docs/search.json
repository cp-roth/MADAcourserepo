[
  {
    "objectID": "tidytuesday-exercise/tidytuesday-exercise.html",
    "href": "tidytuesday-exercise/tidytuesday-exercise.html",
    "title": "Tidy Tuesday Exercise",
    "section": "",
    "text": "Placeholder file for the future Tidy Tuesday exercise."
  },
  {
    "objectID": "starter-analysis-exercise/results/readme.html",
    "href": "starter-analysis-exercise/results/readme.html",
    "title": "Rachel Robertson Data Analysis Portfolio",
    "section": "",
    "text": "This folder contains results produced by the code, such as figures and tables.\nDepending on the size and type of your project, you can either place it all in a single folder or create sub-folders. For instance you could create a folder for figures, another for tables. Or you could create a sub-folder for dataset 1, another for dataset 2. Or you could have a subfolder for exploratory analysis, another for final analysis. The options are endless, choose whatever makes sense for your project. For this template, there is just a a single folder, but having sub-folders is often a good idea."
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "",
    "text": "The following is a template for the final analysis project. The “Starter Analysis” figures and table are featured below.\n\n\n\n\nCora produced a box plot displaying hair color versus height. Because there were one ginger and two blondes, of the same height, the box plot is not evenly distributed.\n\n\n\n\n\nHeight (y-axis) plotted against hair color (x axis).\n\n\n\n\n\n\n\nCora produced a scatter plot of weight versus haircount. The scatter plot displays no trend between the two variables.\n\n\n\n\n\nWeight (y axis) versus haircount (x axis).\n\n\n\n\n\n\n\nI produced a linear model fitting haircolor and haircount to the outcome of height. I had to change the variable names to exclude spaces so that the linear model function would recognize the variables.\n\n\n\nLinear model fit table.\n\n\nterm\nestimate\nstd.error\nstatistic\np.value\n\n\n\n\n(Intercept)\n196.0050251\n68.7506205\n2.8509565\n0.0463510\n\n\nHaircolorblonde\n17.0251256\n21.3696883\n0.7966951\n0.4702399\n\n\nHaircolorbrown\n11.1340034\n16.3855004\n0.6795034\n0.5341073\n\n\nHaircolorginger\n28.0653266\n24.4315134\n1.1487347\n0.3146867\n\n\nHaircount\n-0.0003839\n0.0006569\n-0.5844580\n0.5902885\n\n\n\n\n\n\nThis uses MS Word as output format. See here for more information. You can switch to other formats, like html or pdf. See the Quarto documentation for other formats."
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#cora-hirst-contributed-to-the-starter-analysis-portion-of-this-project",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#cora-hirst-contributed-to-the-starter-analysis-portion-of-this-project",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "",
    "text": "The following is a template for the final analysis project. The “Starter Analysis” figures and table are featured below.\n\n\n\n\nCora produced a box plot displaying hair color versus height. Because there were one ginger and two blondes, of the same height, the box plot is not evenly distributed.\n\n\n\n\n\nHeight (y-axis) plotted against hair color (x axis).\n\n\n\n\n\n\n\nCora produced a scatter plot of weight versus haircount. The scatter plot displays no trend between the two variables.\n\n\n\n\n\nWeight (y axis) versus haircount (x axis).\n\n\n\n\n\n\n\nI produced a linear model fitting haircolor and haircount to the outcome of height. I had to change the variable names to exclude spaces so that the linear model function would recognize the variables.\n\n\n\nLinear model fit table.\n\n\nterm\nestimate\nstd.error\nstatistic\np.value\n\n\n\n\n(Intercept)\n196.0050251\n68.7506205\n2.8509565\n0.0463510\n\n\nHaircolorblonde\n17.0251256\n21.3696883\n0.7966951\n0.4702399\n\n\nHaircolorbrown\n11.1340034\n16.3855004\n0.6795034\n0.5341073\n\n\nHaircolorginger\n28.0653266\n24.4315134\n1.1487347\n0.3146867\n\n\nHaircount\n-0.0003839\n0.0006569\n-0.5844580\n0.5902885\n\n\n\n\n\n\nThis uses MS Word as output format. See here for more information. You can switch to other formats, like html or pdf. See the Quarto documentation for other formats."
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#general-background-information",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#general-background-information",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "2.1 General Background Information",
    "text": "2.1 General Background Information\nProvide enough background on your topic that others can understand the why and how of your analysis"
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#description-of-data-and-data-source",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#description-of-data-and-data-source",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "2.2 Description of data and data source",
    "text": "2.2 Description of data and data source\nDescribe what the data is, what it contains, where it is from, etc. Eventually this might be part of a methods section."
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#questionshypotheses-to-be-addressed",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#questionshypotheses-to-be-addressed",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "2.3 Questions/Hypotheses to be addressed",
    "text": "2.3 Questions/Hypotheses to be addressed\nState the research questions you plan to answer with this analysis.\nTo cite other work (important everywhere, but likely happens first in introduction), make sure your references are in the bibtex file specified in the YAML header above (here dataanalysis_template_references.bib) and have the right bibtex key. Then you can include like this:\nExamples of reproducible research projects can for instance be found in (McKay, Ebell, Billings, et al., 2020; McKay, Ebell, Dale, Shen, & Handel, 2020)"
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#data-aquisition",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#data-aquisition",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "3.1 Data aquisition",
    "text": "3.1 Data aquisition\nAs applicable, explain where and how you got the data. If you directly import the data from an online source, you can combine this section with the next."
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#data-import-and-cleaning",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#data-import-and-cleaning",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "3.2 Data import and cleaning",
    "text": "3.2 Data import and cleaning\nWrite code that reads in the file and cleans it so it’s ready for analysis. Since this will be fairly long code for most datasets, it might be a good idea to have it in one or several R scripts. If that is the case, explain here briefly what kind of cleaning/processing you do, and provide more details and well documented code somewhere (e.g. as supplement in a paper). All materials, including files that contain code, should be commented well so everyone can follow along."
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#statistical-analysis",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#statistical-analysis",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "3.3 Statistical analysis",
    "text": "3.3 Statistical analysis\nExplain anything related to your statistical analyses."
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#exploratorydescriptive-analysis",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#exploratorydescriptive-analysis",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "4.1 Exploratory/Descriptive analysis",
    "text": "4.1 Exploratory/Descriptive analysis\nUse a combination of text/tables/figures to explore and describe your data. Show the most important descriptive results here. Additional ones should go in the supplement. Even more can be in the R and Quarto files that are part of your project.\nTable 1 shows a summary of the data.\nNote the loading of the data providing a relative path using the ../../ notation. (Two dots means a folder up). You never want to specify an absolute path like C:\\ahandel\\myproject\\results\\ because if you share this with someone, it won’t work for them since they don’t have that path. You can also use the here R package to create paths. See examples of that below. I recommend the here package, but I’m showing the other approach here just in case you encounter it.\n\n\n\n\nTable 1: Data summary table.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_type\nskim_variable\nn_missing\ncomplete_rate\nfactor.ordered\nfactor.n_unique\nfactor.top_counts\nnumeric.mean\nnumeric.sd\nnumeric.p0\nnumeric.p25\nnumeric.p50\nnumeric.p75\nnumeric.p100\nnumeric.hist\n\n\n\n\nfactor\nGender\n0\n1\nFALSE\n3\nM: 4, F: 3, O: 2\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nfactor\nHaircolor\n0\n1\nFALSE\n4\nbla: 3, bro: 3, blo: 2, gin: 1\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nnumeric\nHeight\n0\n1\nNA\nNA\nNA\n165.66667\n15.97655\n133\n156\n166\n178\n183\n▂▁▃▃▇\n\n\nnumeric\nWeight\n0\n1\nNA\nNA\nNA\n70.11111\n21.24526\n45\n55\n70\n80\n110\n▇▂▃▂▂\n\n\nnumeric\nHaircount\n0\n1\nNA\nNA\nNA\n106666.66667\n15612.49500\n90000\n95000\n100000\n120000\n135000\n▇▅▂▅▂"
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#basic-statistical-analysis",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#basic-statistical-analysis",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "4.2 Basic statistical analysis",
    "text": "4.2 Basic statistical analysis\nTo get some further insight into your data, if reasonable you could compute simple statistics (e.g. simple models with 1 predictor) to look for associations between your outcome(s) and each individual predictor variable. Though note that unless you pre-specified the outcome and main exposure, any “p&lt;0.05 means statistical significance” interpretation is not valid.\nFigure 1 shows a scatterplot figure produced by one of the R scripts.\n\n\n\n\n\n\n\n\nFigure 1: Height and weight stratified by gender.\n\n\n\n\n\n~Figure 1. Weight (y axis) versus height (x axis) stratified by gender~"
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#full-analysis",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#full-analysis",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "4.3 Full analysis",
    "text": "4.3 Full analysis\nUse one or several suitable statistical/machine learning methods to analyze your data and to produce meaningful figures, tables, etc. This might again be code that is best placed in one or several separate R scripts that need to be well documented. You want the code to produce figures and data ready for display as tables, and save those. Then you load them here.\nExample Table 2 shows a summary of a linear model fit.\n\n\n\n\nTable 2: Linear model fit table.\n\n\n\n\n\n\nterm\nestimate\nstd.error\nstatistic\np.value\n\n\n\n\n(Intercept)\n149.2726967\n23.3823360\n6.3839942\n0.0013962\n\n\nWeight\n0.2623972\n0.3512436\n0.7470519\n0.4886517\n\n\nGenderM\n-2.1244913\n15.5488953\n-0.1366329\n0.8966520\n\n\nGenderO\n-4.7644739\n19.0114155\n-0.2506112\n0.8120871\n\n\n\n\n\n\n\n\n~Table 1. Linear Model of Gender and weight~"
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#summary-and-interpretation",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#summary-and-interpretation",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "5.1 Summary and Interpretation",
    "text": "5.1 Summary and Interpretation\nSummarize what you did, what you found and what it means."
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#strengths-and-limitations",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#strengths-and-limitations",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "5.2 Strengths and Limitations",
    "text": "5.2 Strengths and Limitations\nDiscuss what you perceive as strengths and limitations of your analysis."
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#conclusions",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#conclusions",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "5.3 Conclusions",
    "text": "5.3 Conclusions\nWhat are the main take-home messages?\nInclude citations in your Rmd file using bibtex, the list of references will automatically be placed at the end\nThis paper (Leek & Peng, 2015) discusses types of analyses.\nThese papers (McKay, Ebell, Billings, et al., 2020; McKay, Ebell, Dale, et al., 2020) are good examples of papers published using a fully reproducible setup similar to the one shown in this template.\nNote that this cited reference will show up at the end of the document, the reference formatting is determined by the CSL file specified in the YAML header. Many more style files for almost any journal are available. You also specify the location of your bibtex reference file in the YAML. You can call your reference file anything you like, I just used the generic word references.bib but giving it a more descriptive name is probably better."
  },
  {
    "objectID": "starter-analysis-exercise/data/readme.html",
    "href": "starter-analysis-exercise/data/readme.html",
    "title": "Rachel Robertson Data Analysis Portfolio",
    "section": "",
    "text": "The folders inside this folder should contain all data at various stages.\nThis data is being loaded/manipulated/changed/saved with code from the code folders.\nYou should place the raw data in the raw_data folder and not edit it. Ever!\nIdeally, load the raw data into R and do all changes there with code, so everything is automatically reproducible and documented.\nSometimes, you need to edit the files in the format you got. For instance, Excel files are sometimes so poorly formatted that it’s close to impossible to read them into R, or the persons you got the data from used color to code some information, which of course won’t import into R. In those cases, you might have to make modifications in a software other than R. If you need to make edits in whatever format you got the data (e.g. Excel), make a copy and place those copies in a separate folder, AND ONLY EDIT THOSE COPIES. Also, write down somewhere the edits you made.\nAdd as many sub-folders as suitable. If you only have a single processing step, one sub-folder for processed data is enough. If you have multiple stages of cleaning and processing, additional sub-folders might be useful. Adjust based on the complexity of your project.\nI suggest you save your processed and cleaned data as RDS or RDA/Rdata files. This preserves coding like factors, characters, numeric, etc. If you save as CSV, that information would get lost. However, CSV is better for sharing with others since it’s plain text. If you do CSV, you might want to write down somewhere what each variable is.\nSee here for some suggestions on how to store your processed data:\nhttp://www.sthda.com/english/wiki/saving-data-into-r-data-format-rds-and-rdata"
  },
  {
    "objectID": "starter-analysis-exercise/code/readme.html",
    "href": "starter-analysis-exercise/code/readme.html",
    "title": "Rachel Robertson Data Analysis Portfolio",
    "section": "",
    "text": "Place your various R or Quarto files in the appropriate folders.\nYou can either have fewer large scripts, or multiple scripts that do only specific actions. Those can be R or Quarto files. In either case, document the scripts and what goes on in them so well that someone else (including future you) can easily figure out what is happening.\nThe scripts should load the appropriate data (e.g. raw or processed), perform actions, and save results (e.g. processed data, figures, computed values) in the appropriate folders. Document somewhere what inputs each script takes and where output is placed.\nIf scripts need to be run in a specific order, document this. Either as comments in the script, or in a separate text file such as this readme file. Ideally of course in both locations.\nDepending on your specific project, you might want to have further folders/sub-folders."
  },
  {
    "objectID": "starter-analysis-exercise/code/processing-code/processingfile2.html",
    "href": "starter-analysis-exercise/code/processing-code/processingfile2.html",
    "title": "An example cleaning script",
    "section": "",
    "text": "Processing script\nThis Quarto file contains a mix of code and explanatory text to illustrate a simple data processing/cleaning setup.\n\n\nSetup\nLoad needed packages. make sure they are installed.\n\nlibrary(readxl)#for loading Excel files\nlibrary(dplyr) #for data processing/cleaning\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nlibrary(tidyr) #for data processing/cleaning\nlibrary(skimr) #for nice visualization of data \nlibrary(here) #to set paths\n\nhere() starts at C:/Users/rrsta/OneDrive/Desktop/MADAcourseexercises/MADAcourserepo\n\n\n\n\nData loading\nNote that for functions that come from specific packages (instead of base R), I often specify both package and function like so: package::function() that’s not required one could just call the function specifying the package makes it clearer where the function “lives”, but it adds typing. You can do it either way.\n\n# path to data\n# note the use of the here() package and not absolute paths\ndata_location &lt;- here::here(\"starter-analysis-exercise\",\"data\",\"raw-data\",\"exampledata2.xlsx\")\nrawdata &lt;- readxl::read_excel(data_location)\n\n\n\nCheck data\nFirst we can look at the codebook\n\ncodebook &lt;- readxl::read_excel(data_location, sheet =\"Codebook\")\nprint(codebook)\n\n# A tibble: 5 × 3\n  `Variable Name` `Variable Definition`                 `Allowed Values`        \n  &lt;chr&gt;           &lt;chr&gt;                                 &lt;chr&gt;                   \n1 Height          height in centimeters                 numeric value &gt;0 or NA  \n2 Weight          weight in kilograms                   numeric value &gt;0 or NA  \n3 Gender          identified gender (male/female/other) M/F/O/NA                \n4 Haircount       number of hairs on head               numeric value from 9000…\n5 Haircolor       color of hair on head                 black/brown/blonde/ging…\n\n\nSeveral ways of looking at the data\n\ndplyr::glimpse(rawdata)\n\nRows: 14\nColumns: 5\n$ Height    &lt;chr&gt; \"180\", \"175\", \"sixty\", \"178\", \"192\", \"6\", \"156\", \"166\", \"155…\n$ Weight    &lt;dbl&gt; 80, 70, 60, 76, 90, 55, 90, 110, 54, 7000, NA, 45, 55, 50\n$ Gender    &lt;chr&gt; \"M\", \"O\", \"F\", \"F\", \"NA\", \"F\", \"O\", \"M\", \"N\", \"M\", \"F\", \"F\",…\n$ Haircount &lt;dbl&gt; 100000, 95000, 130000, 120000, 150000, 100000, 90000, 110000…\n$ Haircolor &lt;chr&gt; \"black\", \"brown\", \"blonde\", \"ginger\", \"brown\", \"brown\", \"bla…\n\nsummary(rawdata)\n\n    Height              Weight          Gender            Haircount     \n Length:14          Min.   :  45.0   Length:14          Min.   : 90000  \n Class :character   1st Qu.:  55.0   Class :character   1st Qu.:100000  \n Mode  :character   Median :  70.0   Mode  :character   Median :120000  \n                    Mean   : 602.7                      Mean   :118214  \n                    3rd Qu.:  90.0                      3rd Qu.:133750  \n                    Max.   :7000.0                      Max.   :150000  \n                    NA's   :1                                           \n  Haircolor        \n Length:14         \n Class :character  \n Mode  :character  \n                   \n                   \n                   \n                   \n\nhead(rawdata)\n\n# A tibble: 6 × 5\n  Height Weight Gender Haircount Haircolor\n  &lt;chr&gt;   &lt;dbl&gt; &lt;chr&gt;      &lt;dbl&gt; &lt;chr&gt;    \n1 180        80 M         100000 black    \n2 175        70 O          95000 brown    \n3 sixty      60 F         130000 blonde   \n4 178        76 F         120000 ginger   \n5 192        90 NA        150000 brown    \n6 6          55 F         100000 brown    \n\nskimr::skim(rawdata)\n\n\nData summary\n\n\nName\nrawdata\n\n\nNumber of rows\n14\n\n\nNumber of columns\n5\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n3\n\n\nnumeric\n2\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nHeight\n0\n1\n1\n5\n0\n13\n0\n\n\nGender\n0\n1\n1\n2\n0\n5\n0\n\n\nHaircolor\n0\n1\n5\n6\n0\n4\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nWeight\n1\n0.93\n602.69\n1922.25\n45\n55\n70\n90\n7000\n▇▁▁▁▁\n\n\nHaircount\n0\n1.00\n118214.29\n21177.56\n90000\n100000\n120000\n133750\n150000\n▇▂▅▃▅\n\n\n\n\n\n\n\nCleaning\nBy inspecting the data as done above, we find some problems that need addressing:\nFirst, there is an entry for height which says “sixty” instead of a number. Does that mean it should be a numeric 60? It somehow doesn’t make sense since the weight is 60kg, which can’t happen for a 60cm person (a baby). Since we don’t know how to fix this, we might decide to remove the person. This “sixty” entry also turned all Height entries into characters instead of numeric. That conversion to character also means that our summary function isn’t very meaningful. So let’s fix that first.\n\nd1 &lt;- rawdata %&gt;% dplyr::filter( Height != \"sixty\" ) %&gt;% \n                  dplyr::mutate(Height = as.numeric(Height))\nskimr::skim(d1)\n\n\nData summary\n\n\nName\nd1\n\n\nNumber of rows\n13\n\n\nNumber of columns\n5\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n2\n\n\nnumeric\n3\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nGender\n0\n1\n1\n2\n0\n5\n0\n\n\nHaircolor\n0\n1\n5\n6\n0\n4\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nHeight\n0\n1.00\n151.62\n46.46\n6\n154.00\n165\n175\n192\n▁▁▁▂▇\n\n\nWeight\n1\n0.92\n647.92\n2000.48\n45\n54.75\n73\n90\n7000\n▇▁▁▁▁\n\n\nHaircount\n0\n1.00\n117307.69\n21757.70\n90000\n100000.00\n120000\n135000\n150000\n▇▂▅▂▅\n\n\n\n\nhist(d1$Height)\n\n\n\n\n\n\n\n\nNow we see that there is one person with a height of 6. That could be a typo, or someone mistakenly entered their height in feet. Since we unfortunately don’t know, we might need to remove this person, which we’ll do here.\n\nd2 &lt;- d1 %&gt;% dplyr::mutate( Height = replace(Height, Height==\"6\",round(6*30.48,0)) )\nskimr::skim(d2)\n\n\nData summary\n\n\nName\nd2\n\n\nNumber of rows\n13\n\n\nNumber of columns\n5\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n2\n\n\nnumeric\n3\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nGender\n0\n1\n1\n2\n0\n5\n0\n\n\nHaircolor\n0\n1\n5\n6\n0\n4\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nHeight\n0\n1.00\n165.23\n16.52\n133\n155.00\n166\n178\n192\n▂▇▆▆▃\n\n\nWeight\n1\n0.92\n647.92\n2000.48\n45\n54.75\n73\n90\n7000\n▇▁▁▁▁\n\n\nHaircount\n0\n1.00\n117307.69\n21757.70\n90000\n100000.00\n120000\n135000\n150000\n▇▂▅▂▅\n\n\n\n\n\nHeight values seem ok now.\nNow let’s look at the Weight variable. There is a person with weight of 7000, which is impossible, and one person with missing weight. To be able to analyze the data, we’ll remove those individuals as well.\n\nd3 &lt;- d2 %&gt;%  dplyr::filter(Weight != 7000) %&gt;% tidyr::drop_na()\nskimr::skim(d3)\n\n\nData summary\n\n\nName\nd3\n\n\nNumber of rows\n11\n\n\nNumber of columns\n5\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n2\n\n\nnumeric\n3\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nGender\n0\n1\n1\n2\n0\n5\n0\n\n\nHaircolor\n0\n1\n5\n6\n0\n4\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nHeight\n0\n1\n167.09\n16.81\n133\n155.5\n166\n179\n192\n▂▇▅▇▅\n\n\nWeight\n0\n1\n70.45\n20.65\n45\n54.5\n70\n85\n110\n▇▂▃▃▂\n\n\nHaircount\n0\n1\n112272.73\n19540.17\n90000\n97500.0\n110000\n122500\n150000\n▇▂▅▂▂\n\n\n\n\n\nNow checking the Gender variable. Gender should be a categorical/factor variable but is loaded as character. We can fix that with simple base R code to mix things up.\n\nd3$Gender &lt;- as.factor(d3$Gender)  \nskimr::skim(d3)\n\n\nData summary\n\n\nName\nd3\n\n\nNumber of rows\n11\n\n\nNumber of columns\n5\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n1\n\n\nfactor\n1\n\n\nnumeric\n3\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nHaircolor\n0\n1\n5\n6\n0\n4\n0\n\n\n\nVariable type: factor\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nordered\nn_unique\ntop_counts\n\n\n\n\nGender\n0\n1\nFALSE\n5\nM: 4, F: 3, O: 2, N: 1\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nHeight\n0\n1\n167.09\n16.81\n133\n155.5\n166\n179\n192\n▂▇▅▇▅\n\n\nWeight\n0\n1\n70.45\n20.65\n45\n54.5\n70\n85\n110\n▇▂▃▃▂\n\n\nHaircount\n0\n1\n112272.73\n19540.17\n90000\n97500.0\n110000\n122500\n150000\n▇▂▅▂▂\n\n\n\n\n\nNow we see that there is another NA, but it’s not NA from R, instead it was loaded as character and is now considered as a category. Well proceed here by removing that individual with that NA entry. Since this keeps an empty category for Gender, I’m also using droplevels() to get rid of it.\n\nd4 &lt;- d3 %&gt;% dplyr::filter( !(Gender %in% c(\"NA\",\"N\")) ) %&gt;% droplevels()\nskimr::skim(d4)\n\n\nData summary\n\n\nName\nd4\n\n\nNumber of rows\n9\n\n\nNumber of columns\n5\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n1\n\n\nfactor\n1\n\n\nnumeric\n3\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nHaircolor\n0\n1\n5\n6\n0\n4\n0\n\n\n\nVariable type: factor\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nordered\nn_unique\ntop_counts\n\n\n\n\nGender\n0\n1\nFALSE\n3\nM: 4, F: 3, O: 2\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nHeight\n0\n1\n165.67\n15.98\n133\n156\n166\n178\n183\n▂▁▃▃▇\n\n\nWeight\n0\n1\n70.11\n21.25\n45\n55\n70\n80\n110\n▇▂▃▂▂\n\n\nHaircount\n0\n1\n106666.67\n15612.49\n90000\n95000\n100000\n120000\n135000\n▇▅▂▅▂\n\n\n\n\n\nTo take a look at the new variables, I used the skim function to make sure the new numerical variable of haircount is clean. There are no missing variables, and all the observations fall within the range specified in the codebook. After checking the hair color variable type using the glimpse() function, I realized it needs to be changed to a factor variable. I took another glimpse at the data to confirm my change worked correctly.\n\nskim(d4$Haircount)\n\n\nData summary\n\n\nName\nd4$Haircount\n\n\nNumber of rows\n9\n\n\nNumber of columns\n1\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\nnumeric\n1\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\ndata\n0\n1\n106666.7\n15612.49\n90000\n95000\n1e+05\n120000\n135000\n▇▅▂▅▂\n\n\n\n\nglimpse(d4)\n\nRows: 9\nColumns: 5\n$ Height    &lt;dbl&gt; 180, 175, 178, 183, 156, 166, 133, 166, 154\n$ Weight    &lt;dbl&gt; 80, 70, 76, 55, 90, 110, 45, 55, 50\n$ Gender    &lt;fct&gt; M, O, F, F, O, M, F, M, M\n$ Haircount &lt;dbl&gt; 100000, 95000, 120000, 100000, 90000, 110000, 120000, 135000…\n$ Haircolor &lt;chr&gt; \"black\", \"brown\", \"ginger\", \"brown\", \"black\", \"blonde\", \"bla…\n\nd4$Haircolor &lt;- as.factor(d4$Haircolor)\nglimpse(d4)\n\nRows: 9\nColumns: 5\n$ Height    &lt;dbl&gt; 180, 175, 178, 183, 156, 166, 133, 166, 154\n$ Weight    &lt;dbl&gt; 80, 70, 76, 55, 90, 110, 45, 55, 50\n$ Gender    &lt;fct&gt; M, O, F, F, O, M, F, M, M\n$ Haircount &lt;dbl&gt; 100000, 95000, 120000, 100000, 90000, 110000, 120000, 135000…\n$ Haircolor &lt;fct&gt; black, brown, ginger, brown, black, blonde, black, blonde, b…\n\n\nAll done, data is clean now.\nLet’s assign at the end to some final variable, this makes it easier to add further cleaning steps above.\n\nprocesseddata &lt;- d4\n\n\n\nSave data\nFinally, we save the clean data as RDS file. I suggest you save your processed and cleaned data as RDS or RDA/Rdata files. This preserves coding like factors, characters, numeric, etc. If you save as CSV, that information would get lost. However, CSV is better for sharing with others since it’s plain text. If you do CSV, you might want to write down somewhere what each variable is.\nSee here for some suggestions on how to store your processed data: http://www.sthda.com/english/wiki/saving-data-into-r-data-format-rds-and-rdata\n\nsave_data_location &lt;- here::here(\"starter-analysis-exercise\",\"data\",\"processed-data\",\"processeddata2.rds\")\nsaveRDS(processeddata, file = save_data_location)\n\nNote the use of the here package and here command to specify a path relative to the main project directory, that is the folder that contains the .Rproj file. Always use this approach instead of hard-coding file paths that only exist on your computer.\n\n\nNotes\nRemoving anyone observation with “faulty” or missing data is one approach. It’s often not the best. based on your question and your analysis approach, you might want to do cleaning differently (e.g. keep observations with some missing information)."
  },
  {
    "objectID": "starter-analysis-exercise/code/eda-code/readme.html",
    "href": "starter-analysis-exercise/code/eda-code/readme.html",
    "title": "Rachel Robertson Data Analysis Portfolio",
    "section": "",
    "text": "This folder contains code to do some simple exploratory data analysis (EDA) on the processed/cleaned data. The code produces a few tables and figures, which are saved in the appropriate results sub-folder."
  },
  {
    "objectID": "starter-analysis-exercise/code/eda-code/eda.html",
    "href": "starter-analysis-exercise/code/eda-code/eda.html",
    "title": "An example exploratory analysis script",
    "section": "",
    "text": "This Quarto file loads the cleaned data and does some exploring.\nI’m only showing it the way where the code is included in the file. As described in the processing_code materials, I currently prefer the approach of having R code in a separate file and pulling it in.\nBut I already had this written and haven’t yet re-done it that way. Feel free to redo and send a pull request on GitHub :)\nAgain, it is largely a matter of preference and what makes the most sense to decide if one wants to have code inside Quarto files, or as separate R files. And sometimes, an R script with enough comments is good enough and one doesn’t need a Quarto file.\nAlso note that while here I split cleaning and exploring, this is iterative. You saw that as part of the processing, we already had to explore the data somewhat to understand how to clean it. In general, as you explore, you’ll find things that need cleaning. As you clean, you can explore more. Therefore, at times it might make more sense to combine the cleaning and exploring code parts into a single R or Quarto file. Or split things in any other logical way.\nAs part of the exploratory analysis, you should produce plots or tables or other summary quantities for the most interesting/important quantities in your data. Depending on the total number of variables in your dataset, explore all or some of the others. Figures produced here might be histograms or density plots, correlation plots, etc. Tables might summarize your data.\nStart by exploring one variable at a time. Then continue by creating plots or tables of the outcome(s) of interest and the predictor/exposure/input variables you are most interested in. If your dataset is small, you can do that for all variables.\nPlots produced here can be scatterplots, boxplots, violinplots, etc. Tables can be simple 2x2 tables or larger ones.\n\nSetup\n\n#load needed packages. make sure they are installed.\nlibrary(here) #for data loading/saving\n\nhere() starts at C:/Users/rrsta/OneDrive/Desktop/MADAcourseexercises/MADAcourserepo\n\nlibrary(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nlibrary(skimr)\nlibrary(ggplot2)\n\nLoad the data.\n\n#Path to data. Note the use of the here() package and not absolute paths\ndata_location &lt;- here::here(\"starter-analysis-exercise\",\"data\",\"processed-data\",\"processeddata.rds\")\n#load data\nmydata &lt;- readRDS(data_location)\n\n\n\nData exploration through tables\nShowing a bit of code to produce and save a summary table.\n\nsummary_df = skimr::skim(mydata)\nprint(summary_df)\n\n── Data Summary ────────────────────────\n                           Values\nName                       mydata\nNumber of rows             9     \nNumber of columns          3     \n_______________________          \nColumn type frequency:           \n  factor                   1     \n  numeric                  2     \n________________________         \nGroup variables            None  \n\n── Variable type: factor ───────────────────────────────────────────────────────\n  skim_variable n_missing complete_rate ordered n_unique top_counts      \n1 Gender                0             1 FALSE          3 M: 4, F: 3, O: 2\n\n── Variable type: numeric ──────────────────────────────────────────────────────\n  skim_variable n_missing complete_rate  mean   sd  p0 p25 p50 p75 p100 hist \n1 Height                0             1 166.  16.0 133 156 166 178  183 ▂▁▃▃▇\n2 Weight                0             1  70.1 21.2  45  55  70  80  110 ▇▂▃▂▂\n\n# save to file\nsummarytable_file = here(\"starter-analysis-exercise\",\"results\", \"tables-files\", \"summarytable.rds\")\nsaveRDS(summary_df, file = summarytable_file)\n\nWe are saving the results to the results/tables folder. Structure the folders inside results such that they make sense for your specific analysis. Provide enough documentation that someone can understand what you are doing and what goes where. readme.md files inside each folder are a good idea.\n\n\nData exploration through figures\nHistogram plots for the continuous outcomes.\nHeight first.\n\np1 &lt;- mydata %&gt;% ggplot(aes(x=Height)) + geom_histogram() \nplot(p1)\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\n\n\n\nfigure_file = here(\"starter-analysis-exercise\",\"results\",\"figures\",\"height-distribution.png\")\nggsave(filename = figure_file, plot=p1) \n\nSaving 7 x 5 in image\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\nNow weights.\n\np2 &lt;- mydata %&gt;% ggplot(aes(x=Weight)) + geom_histogram() \nplot(p2)\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\n\n\n\nfigure_file = here(\"starter-analysis-exercise\",\"results\",\"figures\",\"weight-distribution.png\")\nggsave(filename = figure_file, plot=p2) \n\nSaving 7 x 5 in image\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\nNow height as function of weight.\n\np3 &lt;- mydata %&gt;% ggplot(aes(x=Height, y=Weight)) + geom_point() + geom_smooth(method='lm')\nplot(p3)\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\nfigure_file = here(\"starter-analysis-exercise\",\"results\",\"figures\",\"height-weight.png\")\nggsave(filename = figure_file, plot=p3) \n\nSaving 7 x 5 in image\n`geom_smooth()` using formula = 'y ~ x'\n\n\nOnce more height as function of weight, stratified by gender. Note that there is so little data, it’s a bit silly. But we’ll plot it anyway.\n\np4 &lt;- mydata %&gt;% ggplot(aes(x=Height, y=Weight, color = Gender)) + geom_point() + geom_smooth(method='lm')\nplot(p4)\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\nWarning in qt((1 - level)/2, df): NaNs produced\n\n\nWarning in max(ids, na.rm = TRUE): no non-missing arguments to max; returning\n-Inf\n\n\n\n\n\n\n\n\nfigure_file = here(\"starter-analysis-exercise\",\"results\",\"figures\",\"height-weight-stratified.png\")\nggsave(filename = figure_file, plot=p4) \n\nSaving 7 x 5 in image\n`geom_smooth()` using formula = 'y ~ x'\n\n\nWarning in qt((1 - level)/2, df): NaNs produced\n\nWarning in qt((1 - level)/2, df): no non-missing arguments to max; returning\n-Inf\n\n\n\n\nNotes\nFor your own explorations, tables and figures can be “quick and dirty”. As long as you can see what’s going on, there is no need to polish them. That’s in contrast to figures you’ll produce for your final products (paper, report, presentation, website, etc.). Those should look as nice, polished and easy to understand as possible."
  },
  {
    "objectID": "presentation-exercise/presentation-exercise.html",
    "href": "presentation-exercise/presentation-exercise.html",
    "title": "Presentation Exercise",
    "section": "",
    "text": "Placeholder file for the future data/results presentation exercise."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Rachel’s Website and Data Analysis Portfolio",
    "section": "",
    "text": "Use the ‘Menu Bar’ above to learn more ‘About me’ and my ‘Projects’"
  },
  {
    "objectID": "index.html#hello-everyone",
    "href": "index.html#hello-everyone",
    "title": "Rachel’s Website and Data Analysis Portfolio",
    "section": "",
    "text": "Use the ‘Menu Bar’ above to learn more ‘About me’ and my ‘Projects’"
  },
  {
    "objectID": "aboutme.html",
    "href": "aboutme.html",
    "title": "About me",
    "section": "",
    "text": "My name is Rachel Robertson and I am a second-year MPH Epidemiology student at UGA. I recently received my undergraduate degree in Biology here and decided to continue my academic journey. I became interested in public health following the SARS-CoV-2 pandemic and decided to explore CPH courses through ‘Double Dawgs’ at UGA. This led to me where I am today!\n\n\n\nThis is me\n\n\n\n\n\nI have had the wonderful opportunity to do infectious disease research with the Brindley Lab at UGA. Although not public health-related, this virology research gave me a solid basis for the academic world. From this, I also got two poster presentations under my belt: the UGA Center for Undergraduate Research Opportunities and the American Society of Virology conferences. Over the summer, I was able to complete mosquito surveillance in Georgia with a program called, SECVBD, in collaboration with supervisors from the DPH. It was rough, but fun fieldwork that involved traveling to Georgia parks and trapping live mosquitoes. Currently, I am looking forward to beginning research with the SRH lab on Crisis Pregnancy Centers and women’s health!\n\n\n\nThe College of Public Health has sent me through several courses that gave me experience in SAS and STATA, but little to none in R. I have used a few data visualization platforms, such as Tableau and Bio-render, and worked with a team to create presentations. Two examples of such are a tick-borne disease map in the U.S. and a poster exploring the microbial composition in water fountains at UGA. I’d like to take these experiences and build upon them with the knowledge of R to create more complex and relevant projects.\n\n\n\nIn my free time, you can probably find me gaming with my friends. We sometimes play multi-player computer games, but mainly we get together to play Dungeons and Dragons. I also enjoy painting as a hobby and learning other visual art media, like watercolors, graphic design, and crocheting.\n\n\n\nIn this video, Tanisha Batra, a data science graduate, presents her capstone on creating a model to predict the popularity of a song on Spotify. I thought this was interesting because I love music, but I did not expect her findings."
  },
  {
    "objectID": "aboutme.html#read-about-me-here",
    "href": "aboutme.html#read-about-me-here",
    "title": "About me",
    "section": "",
    "text": "My name is Rachel Robertson and I am a second-year MPH Epidemiology student at UGA. I recently received my undergraduate degree in Biology here and decided to continue my academic journey. I became interested in public health following the SARS-CoV-2 pandemic and decided to explore CPH courses through ‘Double Dawgs’ at UGA. This led to me where I am today!\n\n\n\nThis is me\n\n\n\n\n\nI have had the wonderful opportunity to do infectious disease research with the Brindley Lab at UGA. Although not public health-related, this virology research gave me a solid basis for the academic world. From this, I also got two poster presentations under my belt: the UGA Center for Undergraduate Research Opportunities and the American Society of Virology conferences. Over the summer, I was able to complete mosquito surveillance in Georgia with a program called, SECVBD, in collaboration with supervisors from the DPH. It was rough, but fun fieldwork that involved traveling to Georgia parks and trapping live mosquitoes. Currently, I am looking forward to beginning research with the SRH lab on Crisis Pregnancy Centers and women’s health!\n\n\n\nThe College of Public Health has sent me through several courses that gave me experience in SAS and STATA, but little to none in R. I have used a few data visualization platforms, such as Tableau and Bio-render, and worked with a team to create presentations. Two examples of such are a tick-borne disease map in the U.S. and a poster exploring the microbial composition in water fountains at UGA. I’d like to take these experiences and build upon them with the knowledge of R to create more complex and relevant projects.\n\n\n\nIn my free time, you can probably find me gaming with my friends. We sometimes play multi-player computer games, but mainly we get together to play Dungeons and Dragons. I also enjoy painting as a hobby and learning other visual art media, like watercolors, graphic design, and crocheting.\n\n\n\nIn this video, Tanisha Batra, a data science graduate, presents her capstone on creating a model to predict the popularity of a song on Spotify. I thought this was interesting because I love music, but I did not expect her findings."
  },
  {
    "objectID": "coding-exercise/coding-exercise.html",
    "href": "coding-exercise/coding-exercise.html",
    "title": "R Coding Exercise",
    "section": "",
    "text": "setwd(C:/Users/rrsta/OneDrive/Desktop/MADAcourseexercises/MADAcourserepo/coding-exercise)"
  },
  {
    "objectID": "starter-analysis-exercise/code/analysis-code/readme.html",
    "href": "starter-analysis-exercise/code/analysis-code/readme.html",
    "title": "Rachel Robertson Data Analysis Portfolio",
    "section": "",
    "text": "This folder contains code to do some simple exploratory analysis and statistical analysis on the processed/cleaned data. The code produces a few tables and figures, which are saved in the results folder.\nIt’s the same code done 3 times:\n\nFirst, there is an R script that you can run which does all the computations.\nSecond, there is a Quarto file which contains exactly the same code as the R script.\nThird, my current favorite, is a Quarto file with an approach where the code is pulled in from the R script and run.\n\nThe last version has the advantage of having code in one place for easy writing/debugging, and then being able to pull the code into the Quarto file for a nice combination of text/commentary and code.\nEach way of doing this is a reasonable approach, pick whichever one you prefer or makes the most sense for your setup. Whichever approach you choose, add ample documentation/commentary so you and others can easily understand what’s going on and what is done."
  },
  {
    "objectID": "starter-analysis-exercise/code/eda-code/eda2.html",
    "href": "starter-analysis-exercise/code/eda-code/eda2.html",
    "title": "An example exploratory analysis script",
    "section": "",
    "text": "This Quarto file loads the cleaned data and does some exploring.\nI’m only showing it the way where the code is included in the file. As described in the processing_code materials, I currently prefer the approach of having R code in a separate file and pulling it in.\nBut I already had this written and haven’t yet re-done it that way. Feel free to redo and send a pull request on GitHub :)\nAgain, it is largely a matter of preference and what makes the most sense to decide if one wants to have code inside Quarto files, or as separate R files. And sometimes, an R script with enough comments is good enough and one doesn’t need a Quarto file.\nAlso note that while here I split cleaning and exploring, this is iterative. You saw that as part of the processing, we already had to explore the data somewhat to understand how to clean it. In general, as you explore, you’ll find things that need cleaning. As you clean, you can explore more. Therefore, at times it might make more sense to combine the cleaning and exploring code parts into a single R or Quarto file. Or split things in any other logical way.\nAs part of the exploratory analysis, you should produce plots or tables or other summary quantities for the most interesting/important quantities in your data. Depending on the total number of variables in your dataset, explore all or some of the others. Figures produced here might be histograms or density plots, correlation plots, etc. Tables might summarize your data.\nStart by exploring one variable at a time. Then continue by creating plots or tables of the outcome(s) of interest and the predictor/exposure/input variables you are most interested in. If your dataset is small, you can do that for all variables.\nPlots produced here can be scatterplots, boxplots, violinplots, etc. Tables can be simple 2x2 tables or larger ones."
  },
  {
    "objectID": "starter-analysis-exercise/code/eda-code/eda2.html#for-your-own-explorations-tables-and-figures-can-be-quick-and-dirty.-as-long-as-you-can-see-whats-going-on-there-is-no-need-to-polish-them.-thats-in-contrast-to-figures-youll-produce-for-your-final-products-paper-report-presentation-website-etc..-those-should-look-as-nice-polished-and-easy-to-understand-as-possible.",
    "href": "starter-analysis-exercise/code/eda-code/eda2.html#for-your-own-explorations-tables-and-figures-can-be-quick-and-dirty.-as-long-as-you-can-see-whats-going-on-there-is-no-need-to-polish-them.-thats-in-contrast-to-figures-youll-produce-for-your-final-products-paper-report-presentation-website-etc..-those-should-look-as-nice-polished-and-easy-to-understand-as-possible.",
    "title": "An example exploratory analysis script",
    "section": "For your own explorations, tables and figures can be “quick and dirty”. As long as you can see what’s going on, there is no need to polish them. That’s in contrast to figures you’ll produce for your final products (paper, report, presentation, website, etc.). Those should look as nice, polished and easy to understand as possible.",
    "text": "For your own explorations, tables and figures can be “quick and dirty”. As long as you can see what’s going on, there is no need to polish them. That’s in contrast to figures you’ll produce for your final products (paper, report, presentation, website, etc.). Those should look as nice, polished and easy to understand as possible."
  },
  {
    "objectID": "starter-analysis-exercise/code/processing-code/processingfile.html",
    "href": "starter-analysis-exercise/code/processing-code/processingfile.html",
    "title": "An example cleaning script",
    "section": "",
    "text": "Processing script\nThis Quarto file contains a mix of code and explanatory text to illustrate a simple data processing/cleaning setup.\n\n\nSetup\nLoad needed packages. make sure they are installed.\n\nlibrary(readxl) #for loading Excel files\nlibrary(dplyr) #for data processing/cleaning\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nlibrary(tidyr) #for data processing/cleaning\nlibrary(skimr) #for nice visualization of data \nlibrary(here) #to set paths\n\nhere() starts at C:/Users/rrsta/OneDrive/Desktop/MADAcourseexercises/MADAcourserepo\n\n\n\n\nData loading\nNote that for functions that come from specific packages (instead of base R), I often specify both package and function like so: package::function() that’s not required one could just call the function specifying the package makes it clearer where the function “lives”, but it adds typing. You can do it either way.\n\n# path to data\n# note the use of the here() package and not absolute paths\ndata_location &lt;- here::here(\"starter-analysis-exercise\",\"data\",\"raw-data\",\"exampledata.xlsx\")\nrawdata &lt;- readxl::read_excel(data_location)\n\n\n\nCheck data\nFirst we can look at the codebook\n\ncodebook &lt;- readxl::read_excel(data_location, sheet =\"Codebook\")\nprint(codebook)\n\n# A tibble: 3 × 3\n  `Variable Name` `Variable Definition`                 `Allowed Values`      \n  &lt;chr&gt;           &lt;chr&gt;                                 &lt;chr&gt;                 \n1 Height          height in centimeters                 numeric value &gt;0 or NA\n2 Weight          weight in kilograms                   numeric value &gt;0 or NA\n3 Gender          identified gender (male/female/other) M/F/O/NA              \n\n\nSeveral ways of looking at the data\n\ndplyr::glimpse(rawdata)\n\nRows: 14\nColumns: 3\n$ Height &lt;chr&gt; \"180\", \"175\", \"sixty\", \"178\", \"192\", \"6\", \"156\", \"166\", \"155\", …\n$ Weight &lt;dbl&gt; 80, 70, 60, 76, 90, 55, 90, 110, 54, 7000, NA, 45, 55, 50\n$ Gender &lt;chr&gt; \"M\", \"O\", \"F\", \"F\", \"NA\", \"F\", \"O\", \"M\", \"N\", \"M\", \"F\", \"F\", \"M…\n\nsummary(rawdata)\n\n    Height              Weight          Gender         \n Length:14          Min.   :  45.0   Length:14         \n Class :character   1st Qu.:  55.0   Class :character  \n Mode  :character   Median :  70.0   Mode  :character  \n                    Mean   : 602.7                     \n                    3rd Qu.:  90.0                     \n                    Max.   :7000.0                     \n                    NA's   :1                          \n\nhead(rawdata)\n\n# A tibble: 6 × 3\n  Height Weight Gender\n  &lt;chr&gt;   &lt;dbl&gt; &lt;chr&gt; \n1 180        80 M     \n2 175        70 O     \n3 sixty      60 F     \n4 178        76 F     \n5 192        90 NA    \n6 6          55 F     \n\nskimr::skim(rawdata)\n\n\nData summary\n\n\nName\nrawdata\n\n\nNumber of rows\n14\n\n\nNumber of columns\n3\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n2\n\n\nnumeric\n1\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nHeight\n0\n1\n1\n5\n0\n13\n0\n\n\nGender\n0\n1\n1\n2\n0\n5\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nWeight\n1\n0.93\n602.69\n1922.25\n45\n55\n70\n90\n7000\n▇▁▁▁▁\n\n\n\n\n\n\n\nCleaning\nBy inspecting the data as done above, we find some problems that need addressing:\nFirst, there is an entry for height which says “sixty” instead of a number. Does that mean it should be a numeric 60? It somehow doesn’t make sense since the weight is 60kg, which can’t happen for a 60cm person (a baby). Since we don’t know how to fix this, we might decide to remove the person. This “sixty” entry also turned all Height entries into characters instead of numeric. That conversion to character also means that our summary function isn’t very meaningful. So let’s fix that first.\n\nd1 &lt;- rawdata %&gt;% dplyr::filter( Height != \"sixty\" ) %&gt;% \n                  dplyr::mutate(Height = as.numeric(Height))\nskimr::skim(d1)\n\n\nData summary\n\n\nName\nd1\n\n\nNumber of rows\n13\n\n\nNumber of columns\n3\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n1\n\n\nnumeric\n2\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nGender\n0\n1\n1\n2\n0\n5\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nHeight\n0\n1.00\n151.62\n46.46\n6\n154.00\n165\n175\n192\n▁▁▁▂▇\n\n\nWeight\n1\n0.92\n647.92\n2000.48\n45\n54.75\n73\n90\n7000\n▇▁▁▁▁\n\n\n\n\nhist(d1$Height)\n\n\n\n\n\n\n\n\nNow we see that there is one person with a height of 6. That could be a typo, or someone mistakenly entered their height in feet. Since we unfortunately don’t know, we might need to remove this person, which we’ll do here.\n\nd2 &lt;- d1 %&gt;% dplyr::mutate( Height = replace(Height, Height==\"6\",round(6*30.48,0)) )\nskimr::skim(d2)\n\n\nData summary\n\n\nName\nd2\n\n\nNumber of rows\n13\n\n\nNumber of columns\n3\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n1\n\n\nnumeric\n2\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nGender\n0\n1\n1\n2\n0\n5\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nHeight\n0\n1.00\n165.23\n16.52\n133\n155.00\n166\n178\n192\n▂▇▆▆▃\n\n\nWeight\n1\n0.92\n647.92\n2000.48\n45\n54.75\n73\n90\n7000\n▇▁▁▁▁\n\n\n\n\n\nHeight values seem ok now.\nNow let’s look at the Weight variable. There is a person with weight of 7000, which is impossible, and one person with missing weight. To be able to analyze the data, we’ll remove those individuals as well.\n\nd3 &lt;- d2 %&gt;%  dplyr::filter(Weight != 7000) %&gt;% tidyr::drop_na()\nskimr::skim(d3)\n\n\nData summary\n\n\nName\nd3\n\n\nNumber of rows\n11\n\n\nNumber of columns\n3\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n1\n\n\nnumeric\n2\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nGender\n0\n1\n1\n2\n0\n5\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nHeight\n0\n1\n167.09\n16.81\n133\n155.5\n166\n179\n192\n▂▇▅▇▅\n\n\nWeight\n0\n1\n70.45\n20.65\n45\n54.5\n70\n85\n110\n▇▂▃▃▂\n\n\n\n\n\nNow checking the Gender variable. Gender should be a categorical/factor variable but is loaded as character. We can fix that with simple base R code to mix things up.\n\nd3$Gender &lt;- as.factor(d3$Gender)  \nskimr::skim(d3)\n\n\nData summary\n\n\nName\nd3\n\n\nNumber of rows\n11\n\n\nNumber of columns\n3\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\nfactor\n1\n\n\nnumeric\n2\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: factor\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nordered\nn_unique\ntop_counts\n\n\n\n\nGender\n0\n1\nFALSE\n5\nM: 4, F: 3, O: 2, N: 1\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nHeight\n0\n1\n167.09\n16.81\n133\n155.5\n166\n179\n192\n▂▇▅▇▅\n\n\nWeight\n0\n1\n70.45\n20.65\n45\n54.5\n70\n85\n110\n▇▂▃▃▂\n\n\n\n\n\nNow we see that there is another NA, but it’s not NA from R, instead it was loaded as character and is now considered as a category. Well proceed here by removing that individual with that NA entry. Since this keeps an empty category for Gender, I’m also using droplevels() to get rid of it.\n\nd4 &lt;- d3 %&gt;% dplyr::filter( !(Gender %in% c(\"NA\",\"N\")) ) %&gt;% droplevels()\nskimr::skim(d4)\n\n\nData summary\n\n\nName\nd4\n\n\nNumber of rows\n9\n\n\nNumber of columns\n3\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\nfactor\n1\n\n\nnumeric\n2\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: factor\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nordered\nn_unique\ntop_counts\n\n\n\n\nGender\n0\n1\nFALSE\n3\nM: 4, F: 3, O: 2\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nHeight\n0\n1\n165.67\n15.98\n133\n156\n166\n178\n183\n▂▁▃▃▇\n\n\nWeight\n0\n1\n70.11\n21.25\n45\n55\n70\n80\n110\n▇▂▃▂▂\n\n\n\n\n\nAll done, data is clean now.\nLet’s assign at the end to some final variable, this makes it easier to add further cleaning steps above.\n\nprocesseddata &lt;- d4\n\n\n\nSave data\nFinally, we save the clean data as RDS file. I suggest you save your processed and cleaned data as RDS or RDA/Rdata files. This preserves coding like factors, characters, numeric, etc. If you save as CSV, that information would get lost. However, CSV is better for sharing with others since it’s plain text. If you do CSV, you might want to write down somewhere what each variable is.\nSee here for some suggestions on how to store your processed data: http://www.sthda.com/english/wiki/saving-data-into-r-data-format-rds-and-rdata\n\nsave_data_location &lt;- here::here(\"starter-analysis-exercise\",\"data\",\"processed-data\",\"processeddata.rds\")\nsaveRDS(processeddata, file = save_data_location)\n\nNote the use of the here package and here command to specify a path relative to the main project directory, that is the folder that contains the .Rproj file. Always use this approach instead of hard-coding file paths that only exist on your computer.\n\n\nNotes\nRemoving anyone observation with “faulty” or missing data is one approach. It’s often not the best. based on your question and your analysis approach, you might want to do cleaning differently (e.g. keep observations with some missing information)."
  },
  {
    "objectID": "starter-analysis-exercise/code/processing-code/readme.html",
    "href": "starter-analysis-exercise/code/processing-code/readme.html",
    "title": "Rachel Robertson Data Analysis Portfolio",
    "section": "",
    "text": "This folder contains code for processing data.\nCurrently, there is just a single Quarto file to illustrate how the processing can look like.\nInstead of a Quarto file that contains code, it is also possible to use R scripts or a combination of R scripts and Quarto code. Those approaches are illustrated in the full dataanalysis-template repository."
  },
  {
    "objectID": "starter-analysis-exercise/data/raw-data/readme.html",
    "href": "starter-analysis-exercise/data/raw-data/readme.html",
    "title": "Rachel Robertson Data Analysis Portfolio",
    "section": "",
    "text": "This folder contains a simple made-up data-set in an Excel file.\nIt contains the variables Height, Weight and Gender of a few imaginary individuals.\nThe dataset purposefully contains some faulty entries that need to be cleaned.\nGenerally, any dataset should contain some meta-data explaining what each variable in the dataset is. (This is often called a Codebook.) For this simple example, the codebook is given as a second sheet in the Excel file.\nThis raw data-set should generally not be edited by hand. It should instead be loaded and processed/cleaned using code."
  },
  {
    "objectID": "starter-analysis-exercise/products/readme.html",
    "href": "starter-analysis-exercise/products/readme.html",
    "title": "Rachel Robertson Data Analysis Portfolio",
    "section": "",
    "text": "The folders inside this folder should contain all the products of your project.\nFor a classical academic project, this will be a peer-reviewed manuscript, and should be placed into a manuscript folder.\nFor our case, since we’ll want to put it on the website, we call it a report.\nOften you need a library of references in bibtex format, as well as a CSL style file that determines reference formatting. Since those files might be used by several of the products, I’m placing them in the main products folder. Feel free to re-organize."
  },
  {
    "objectID": "starter-analysis-exercise/results/figures/readme.html",
    "href": "starter-analysis-exercise/results/figures/readme.html",
    "title": "Rachel Robertson Data Analysis Portfolio",
    "section": "",
    "text": "Folder for all figures.\nYou can create further sub-folders if that makes sense."
  },
  {
    "objectID": "starter-analysis-exercise/results/tables-files/readme.html",
    "href": "starter-analysis-exercise/results/tables-files/readme.html",
    "title": "Rachel Robertson Data Analysis Portfolio",
    "section": "",
    "text": "Folder for all tables (generally stored as Rds files) and other files.\nYou can create further sub-folders if that makes sense."
  },
  {
    "objectID": "coding-exercise/coding-exercise.html#viewing-help-file-from-gapminder",
    "href": "coding-exercise/coding-exercise.html#viewing-help-file-from-gapminder",
    "title": "R Coding Exercise",
    "section": "Viewing help file from gapminder",
    "text": "Viewing help file from gapminder\nhelp(gapminder) ## Viewing the structure of gapminder str(gapminder) ## Viewing the data summary statistics of gapminder data summary(gapminder) ## Determining the type of object gapminder is class(gapminder)"
  },
  {
    "objectID": "coding-exercise/coding-exercise.html#accessing-tidyverse-package",
    "href": "coding-exercise/coding-exercise.html#accessing-tidyverse-package",
    "title": "R Coding Exercise",
    "section": "Accessing tidyverse package",
    "text": "Accessing tidyverse package\nlibrary(tidyverse) ## Create a new variable including the Regions Western Africa and Eastern Africa only ### Assigning the Continents into values “Africa” or “Other library(tidyverse)\nd2 &lt;- gapminder %&gt;% mutate(africadata = case_when( continent %in% c(“Africa”) ~ “Africa”, TRUE ~ “Other” ))\nprint(d2)"
  },
  {
    "objectID": "coding-exercise/coding-exercise.html#dropping-the-other-values-for-africa-data",
    "href": "coding-exercise/coding-exercise.html#dropping-the-other-values-for-africa-data",
    "title": "R Coding Exercise",
    "section": "Dropping the “Other” values for africa data",
    "text": "Dropping the “Other” values for africa data\nlibrary(dplyr)\nd3 &lt;- d2 %&gt;% filter(africadata != “Other”)\nprint(d3) ## Checking the number of values in africadata summary(d3$africadata) &gt;The number of values is correct and africa data only includes the continent Africa"
  },
  {
    "objectID": "coding-exercise/coding-exercise.html#creating-object-containing-infant_mortality-and-life_expectancy-under-d4",
    "href": "coding-exercise/coding-exercise.html#creating-object-containing-infant_mortality-and-life_expectancy-under-d4",
    "title": "R Coding Exercise",
    "section": "Creating object containing infant_mortality and life_expectancy under d4",
    "text": "Creating object containing infant_mortality and life_expectancy under d4\nd4 &lt;- d3 %&gt;% select(life_expectancy, infant_mortality)\nprint(d4) ## Creating object containing population and life_expectancy under d5 d5 &lt;- d3 %&gt;% select(life_expectancy, population)\nprint(d5) library(ggplot2)"
  },
  {
    "objectID": "coding-exercise/coding-exercise.html#plot-life-expectancy-as-a-funciton-of-infant-mortality",
    "href": "coding-exercise/coding-exercise.html#plot-life-expectancy-as-a-funciton-of-infant-mortality",
    "title": "R Coding Exercise",
    "section": "Plot life expectancy as a funciton of infant mortality",
    "text": "Plot life expectancy as a funciton of infant mortality\n\nOpenning the ggplot2 library\nlibrary (ggplot2)\nlifevim_plot2 &lt;- ggplot(d4, aes(x = infant_mortality, y = life_expectancy), color=country) + geom_point() + labs(title = “Life Expectancy vs. Infant Mortality”, x = “Infant Mortality”, y = “Life Expectancy”)\nprint(lifevim_plot2)"
  },
  {
    "objectID": "coding-exercise/coding-exercise.html#plot-life-expectancy-as-a-function-of-populaiton-size-using-ggplot2",
    "href": "coding-exercise/coding-exercise.html#plot-life-expectancy-as-a-function-of-populaiton-size-using-ggplot2",
    "title": "R Coding Exercise",
    "section": "Plot life expectancy as a function of populaiton size using ggplot2",
    "text": "Plot life expectancy as a function of populaiton size using ggplot2\nlifevpop_plot &lt;- ggplot(d5, aes(x = log(population), y = life_expectancy)) + geom_point() + labs(title = “Life Expectancy vs. log(Population)”, x = “Log(Population)”, y = “Life Expectancy”)\nprint(lifevpop_plot)"
  },
  {
    "objectID": "coding-exercise/coding-exercise.html#plot-with-life-expectancy-versus-infant-mortality",
    "href": "coding-exercise/coding-exercise.html#plot-with-life-expectancy-versus-infant-mortality",
    "title": "R Coding Exercise",
    "section": "Plot with life expectancy versus infant mortality",
    "text": "Plot with life expectancy versus infant mortality\nlifevim_plot6 &lt;- ggplot(d7, aes(x = infant_mortality, y = life_expectancy)) + geom_point() + labs(title = “Life Expectancy vs. Infant Mortality in 2000”, x = “Infant Mortality”, y = “Life Expectancy”)\nprint(lifevim_plot6) &gt;A negative trend is still observed between infant mortality and life expectancy int heyear 2000."
  },
  {
    "objectID": "coding-exercise/coding-exercise.html#plot-with-life-expectancy-versus-logpopulation",
    "href": "coding-exercise/coding-exercise.html#plot-with-life-expectancy-versus-logpopulation",
    "title": "R Coding Exercise",
    "section": "Plot with life expectancy versus log(population)",
    "text": "Plot with life expectancy versus log(population)\nlifevpop_plot4 &lt;- ggplot(d7, aes(x = log(population), y = life_expectancy)) + geom_point() + labs(title = “Life Expectancy vs. log(Population) by Country”, x = “Log(Population)”, y = “Life Expectancy”)\nprint(lifevpop_plot4) &gt;There is no trend observed between log(population) and life expectancy in this case, so we will test this using a linear model."
  },
  {
    "objectID": "coding-exercise/coding-exercise.html#model-for-life-expectancy-versus-infant-mortality-in-2000",
    "href": "coding-exercise/coding-exercise.html#model-for-life-expectancy-versus-infant-mortality-in-2000",
    "title": "R Coding Exercise",
    "section": "Model for life expectancy versus infant mortality in 2000",
    "text": "Model for life expectancy versus infant mortality in 2000\nlmfit_lifevim &lt;- lm(life_expectancy ~ infant_mortality, d7)\nlmtable_lifevim &lt;- broom::tidy(lmfit_lifevim) print(lmtable_lifevim) &gt;Model table reflects the negative trend between infant mortality and life expectancy in the year 2000"
  },
  {
    "objectID": "coding-exercise/coding-exercise.html#model-for-life-expectancy-versus-logpopulation-in-2000",
    "href": "coding-exercise/coding-exercise.html#model-for-life-expectancy-versus-logpopulation-in-2000",
    "title": "R Coding Exercise",
    "section": "Model for life expectancy versus log(population) in 2000",
    "text": "Model for life expectancy versus log(population) in 2000\nlmfit_lifevpop &lt;- lm(life_expectancy ~ log(population), d7)\nlmtable_lifevpop &lt;- broom::tidy(lmfit_lifevpop) print(lmtable_lifevpop) &gt;There is a slight negative trend in life expectancy and log(population), however this is NOT statistically significant, with a p-value of 0.5. Therefore no trend is observed for the year 2000.\n##This section contributed by Cassia Roth\nFirst, I will load all of the necessary packages to run the data analysis.\n\n#Loading packages\nlibrary(dslabs)\nlibrary(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nlibrary(ggplot2)\nlibrary(here)\n\nhere() starts at /Users/cassiaroth/Documents/GitHub/MADARoth/MADAcourserepo\n\nlibrary(renv)\n\n\nAttaching package: 'renv'\n\n\nThe following objects are masked from 'package:stats':\n\n    embed, update\n\n\nThe following objects are masked from 'package:utils':\n\n    history, upgrade\n\n\nThe following objects are masked from 'package:base':\n\n    autoload, load, remove\n\n\nNext, I will explore the murders dataset from dslabs. This dataset contains information about the number of gun murders in each state in the United States in 2010, as well as the population and region of each state. Gun murder data were collected from FBI reports. You can see more about the dataset at dslabs.\n\n#Looking at help file for murders data\nhelp(murders)\n\n#Getting overview of data structure\nstr(murders)\n\n'data.frame':   51 obs. of  5 variables:\n $ state     : chr  \"Alabama\" \"Alaska\" \"Arizona\" \"Arkansas\" ...\n $ abb       : chr  \"AL\" \"AK\" \"AZ\" \"AR\" ...\n $ region    : Factor w/ 4 levels \"Northeast\",\"South\",..: 2 4 4 2 4 4 1 2 2 2 ...\n $ population: num  4779736 710231 6392017 2915918 37253956 ...\n $ total     : num  135 19 232 93 1257 ...\n\n#Getting summary of data\nsummary(murders)\n\n    state               abb                      region     population      \n Length:51          Length:51          Northeast    : 9   Min.   :  563626  \n Class :character   Class :character   South        :17   1st Qu.: 1696962  \n Mode  :character   Mode  :character   North Central:12   Median : 4339367  \n                                       West         :13   Mean   : 6075769  \n                                                          3rd Qu.: 6636084  \n                                                          Max.   :37253956  \n     total       \n Min.   :   2.0  \n 1st Qu.:  24.5  \n Median :  97.0  \n Mean   : 184.4  \n 3rd Qu.: 268.0  \n Max.   :1257.0  \n\n#Determining type of object\nclass(murders)\n\n[1] \"data.frame\"\n\n\nThe dataset includes 51 observations of six variables (state, abb, region, population, total, rate) for the year 2010 only.\nI will now assign the murders dataset to a new variable called murders_data_south in which I explore murder rates in the south region, since that is where we are currently based.\n\n#Assigning murders dataset to new variable `murders_data_south`\nmurders_data_south &lt;- murders %&gt;% \n  filter(region == \"South\")\n\n#Getting overview of data structure for `murders_data_south`\nstr(murders_data_south)\n\n'data.frame':   17 obs. of  5 variables:\n $ state     : chr  \"Alabama\" \"Arkansas\" \"Delaware\" \"District of Columbia\" ...\n $ abb       : chr  \"AL\" \"AR\" \"DE\" \"DC\" ...\n $ region    : Factor w/ 4 levels \"Northeast\",\"South\",..: 2 2 2 2 2 2 2 2 2 2 ...\n $ population: num  4779736 2915918 897934 601723 19687653 ...\n $ total     : num  135 93 38 99 669 376 116 351 293 120 ...\n\n#Getting summary of `murders_data_south`\nsummary(murders_data_south)\n\n    state               abb                      region     population      \n Length:17          Length:17          Northeast    : 0   Min.   :  601723  \n Class :character   Class :character   South        :17   1st Qu.: 2967297  \n Mode  :character   Mode  :character   North Central: 0   Median : 4625364  \n                                       West         : 0   Mean   : 6804378  \n                                                          3rd Qu.: 8001024  \n                                                          Max.   :25145561  \n     total      \n Min.   : 27.0  \n 1st Qu.:111.0  \n Median :207.0  \n Mean   :246.8  \n 3rd Qu.:293.0  \n Max.   :805.0  \n\n#Getting unique entries for the variable 'state'\nunique_states &lt;- unique(murders_data_south$state)\n\n# Print the unique entries\nprint(unique_states)\n\n [1] \"Alabama\"              \"Arkansas\"             \"Delaware\"            \n [4] \"District of Columbia\" \"Florida\"              \"Georgia\"             \n [7] \"Kentucky\"             \"Louisiana\"            \"Maryland\"            \n[10] \"Mississippi\"          \"North Carolina\"       \"Oklahoma\"            \n[13] \"South Carolina\"       \"Tennessee\"            \"Texas\"               \n[16] \"Virginia\"             \"West Virginia\"       \n\n#In this chunk, I asked ChatGPT how to get a list of the unique character entries for the variable state.\n\nThe dataset includes 17 states in the South region, listed above.\nNow, let’s begin to look at the data.\n\n#Plotting\n\n#Creating a bar plot of murders in absolute numbers in the South by state, 2010\nplot_7 &lt;- ggplot(murders_data_south, aes(x = state, y = total)) +\n  geom_bar(stat = \"identity\", fill = \"purple\", color = \"black\") +\n  labs(title = \"Murders in Absolute Numbers by State, South 2010\",\n       x = \"State\",\n       y = \"Total\") +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n\n#Displaying\nprint(plot_7)\n\n\n\n\n\n\n\n#Saving as a figure\nfigure_file = here(\"coding-exercise\",\"results\", \"figures\",\"murders_pop.png\")\nggsave(filename = figure_file, plot=plot_7)\n\nSaving 7 x 5 in image\n\n\nWhen looking at the absolute number of gun murders in the South region for the year 2010, we can see that Texas has the highest number of murders. But, we also know that Texas has a large population, so this doesn’t give us an accurate picture of which state is most dangerous in relation to gun violence.\nTo better get an idea of which states in the South region are most dangerous, we need to look at rates.\n\n# Calculating murder rate (total murders per 100,000 population)\nmurders_data_south$rate &lt;- (murders_data_south$total / murders_data_south$population) * 100000\n\n#Creating a bar plot of murder rates in the South by state, 2010\nplot_8 &lt;- ggplot(murders_data_south, aes(x = state, y = rate)) +\n  geom_bar(stat = \"identity\", fill = \"purple\", color = \"black\") +\n  labs(title = \"Murder Rates in Southern States, 2010\",\n       x = \"State\",\n       y = \"Murder Rate per 100,000 Population\") +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n\n#Displaying\nprint(plot_8)\n\n\n\n\n\n\n\n#Saving as a figure\nfigure_file = here(\"coding-exercise\",\"results\", \"figures\",\"murders_rates_south.png\")\nggsave(filename = figure_file, plot=plot_8)\n\nSaving 7 x 5 in image\n\n#To refresh my memory on how to plot in R, I asked ChatGPT the following: if the data.frame is murders_data_south, and the variables are total and population and state, how do I plot murder rates in R? And if the data.frame is murders_data_south, and the variables are total, population, rate, and state, how do I plot murder rates in R?\n\nWhen we look at murder rates per 100,000 people, we see that Texas is not the most dangerous state. In fact, the most dangerous state is not even a state at all! It is the District of Columbia, which is technically a district. It doesn’t have representation in Congress (senators or representatives) even though its population is larger than both Wyoming and Vermont, which have two senators and one representative each.\nTo better understand the south within a national picture, let’s compare rates by region.\n\n# Calculating murder rate (total murders per 100,000 population)\nmurders$rate &lt;- (murders$total / murders$population) * 100000\n\n#Aggregating the data to get the mean murder rate for each region, 2010\nregion_summary &lt;- aggregate(rate ~ region, data = murders, FUN = mean)\n\n#Creating a bar plot of murder rates by region, 2010\nplot_9 &lt;- ggplot(region_summary, aes(x = region, y = rate)) +\n  geom_bar(stat = \"identity\", fill = \"skyblue\", color = \"black\") +\n  labs(title = \"Mean Murder Rates by Region, 2010\",\n       x = \"Region\",\n       y = \"Mean Murder Rate per 100,000 Population\") +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n\n#Displaying\nprint(plot_9)\n\n\n\n\n\n\n\n#Saving as a figure\nfigure_file = here(\"coding-exercise\",\"results\", \"figures\",\"murders_rates_region.png\")\nggsave(filename = figure_file, plot=plot_9)\n\nSaving 7 x 5 in image\n\n\nZooming out, we can see that the out of the four regions represented in this dataset, the south has the highest murder rate per 100,000. Historians have debated why the south has higher murder rates for decades, with emphasis on the legacies of slavery and subsequent rural violence and racial animosity.\nNow, let’s explore some possible correlations to further understand our data. First, I will perform a simple linear regression model with rate as the dependent (outcome) variable and region as the independent (predictor) variable.\n\n#Simple model fits_1 for rate based on region\n\n#Making 'South' as the reference level\nmurders$region &lt;- relevel(murders$region, ref = \"South\")\n\n#Here, I had to use ChatGPT to understand how to make South the reference level.\n\n#Fitting linear regression model for murder rate and region\nfit_1 &lt;- lm(rate ~ region, data = murders)\n\n#Printing summary of the regression model\nsummary(fit_1)\n\n\nCall:\nlm(formula = rate ~ region, data = murders)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-2.9599 -1.2076 -0.4764  0.7392 12.0357 \n\nCoefficients:\n                    Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)           4.4170     0.5392   8.192 1.32e-10 ***\nregionNortheast      -2.5695     0.9165  -2.804  0.00732 ** \nregionNorth Central  -2.2350     0.8382  -2.666  0.01048 *  \nregionWest           -2.5836     0.8191  -3.154  0.00280 ** \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 2.223 on 47 degrees of freedom\nMultiple R-squared:  0.2298,    Adjusted R-squared:  0.1807 \nF-statistic: 4.675 on 3 and 47 DF,  p-value: 0.006131\n\n\nHere, we see that the p-values for all regions are statistically significant, which suggests that being in the south region has an effect on gun murder rates. From our estimates, we can also see that Northeast, North Central, and West regions have lower gun murder rates than our intercept (South region)."
  }
]